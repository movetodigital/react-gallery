// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Justified /> should render and match snapshot 1`] = `
<Justified
  gridColumns={5}
  gridGutter={1}
  images={
    Array [
      Object {
        "height": 500,
        "src": "/image/name/1",
        "width": 500,
      },
      Object {
        "height": 500,
        "src": "/image/name/1",
        "width": 500,
      },
      Object {
        "height": 500,
        "src": "/image/name/1",
        "width": 500,
      },
      Object {
        "height": 500,
        "src": "/image/name/1",
        "width": 500,
      },
    ]
  }
>
  <Styled(Component)
    className=""
    onWheel={[Function]}
  >
    <StyledComponent
      className=""
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "cihfGY",
            "rules": Array [
              "
  position: relative;
  display: block;
  font-size: 0;
  opacity: ",
              [Function],
              ";
  height: initial;
  overflow: initial;
",
            ],
          },
          "displayName": "Styled(Component)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-htpNat cihfGY"
          >
            <div
              class=""
            >
              <div
                class=""
                style="vertical-align: top; position: relative; display: inline-block; width: 20%; margin: 0px 0.5% 0.5% 0px;"
              >
                <div>
                  <img
                    alt=""
                    class="sc-bwzfXH eYmfNB"
                    src="/image/name/1"
                  />
                  <div
                    style="padding-top: 100%; background-color: rgb(240, 240, 240);"
                  />
                </div>
              </div>
              <div
                class=""
                style="vertical-align: top; position: relative; display: inline-block; width: 20%; margin: 0px 0.5% 0.5% 0px;"
              >
                <div>
                  <img
                    alt=""
                    class="sc-bwzfXH eYmfNB"
                    src="/image/name/1"
                  />
                  <div
                    style="padding-top: 100%; background-color: rgb(240, 240, 240);"
                  />
                </div>
              </div>
              <div
                class=""
                style="vertical-align: top; position: relative; display: inline-block; width: 20%; margin: 0px 0.5% 0.5% 0px;"
              >
                <div>
                  <img
                    alt=""
                    class="sc-bwzfXH eYmfNB"
                    src="/image/name/1"
                  />
                  <div
                    style="padding-top: 100%; background-color: rgb(240, 240, 240);"
                  />
                </div>
              </div>
              <div
                class=""
                style="vertical-align: top; position: relative; display: inline-block; width: 20%; margin: 0px 0px 0.5% 0px;"
              >
                <div>
                  <img
                    alt=""
                    class="sc-bwzfXH eYmfNB"
                    src="/image/name/1"
                  />
                  <div
                    style="padding-top: 100%; background-color: rgb(240, 240, 240);"
                  />
                </div>
              </div>
            </div>
            <div />
          </div>,
        }
      }
      onWheel={[Function]}
    >
      <ForwardRef
        className="sc-htpNat cihfGY"
        onWheel={[Function]}
      >
        <div
          className="sc-htpNat cihfGY"
        >
          <div
            className=""
          >
            <div
              className=""
              key="column-/image/name/1-0-0"
              style={
                Object {
                  "display": "inline-block",
                  "margin": "0 0.5% 0.5% 0",
                  "maxWidth": null,
                  "position": "relative",
                  "verticalAlign": "top",
                  "width": "20%",
                }
              }
            >
              <ViewMonitor>
                <div>
                  <Image
                    alt=""
                    aspectRatio={1}
                    enableMasonry={false}
                    height={200}
                    newHeight={200}
                    newWidth={200}
                    newWidthInPercent={20}
                    onClick={[Function]}
                    originalHeight={500}
                    originalWidth={500}
                    placeholderColor="#f0f0f0"
                    placeholderHeight={100}
                    src="/image/name/1"
                    visible={true}
                    width={200}
                  >
                    <Styled(Component)
                      alt=""
                      onClick={[Function]}
                      src="/image/name/1"
                      visible={true}
                    >
                      <StyledComponent
                        alt=""
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bwzfXH",
                              "isStatic": false,
                              "lastClassName": "eYmfNB",
                              "rules": Array [
                                "
  position: absolute;
  display: ",
                                [Function],
                                ";
  width: 100%;
  cursor: pointer;
",
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bwzfXH",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        src="/image/name/1"
                        visible={true}
                      >
                        <Component
                          alt=""
                          className="sc-bwzfXH eYmfNB"
                          onClick={[Function]}
                          src="/image/name/1"
                          visible={true}
                        >
                          <img
                            alt=""
                            className="sc-bwzfXH eYmfNB"
                            onClick={[Function]}
                            src="/image/name/1"
                          />
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                  </Image>
                  <div
                    style={
                      Object {
                        "backgroundColor": "#f0f0f0",
                        "paddingTop": "100%",
                      }
                    }
                  />
                </div>
              </ViewMonitor>
            </div>
            <div
              className=""
              key="column-/image/name/1-0-1"
              style={
                Object {
                  "display": "inline-block",
                  "margin": "0 0.5% 0.5% 0",
                  "maxWidth": null,
                  "position": "relative",
                  "verticalAlign": "top",
                  "width": "20%",
                }
              }
            >
              <ViewMonitor>
                <div>
                  <Image
                    alt=""
                    aspectRatio={1}
                    enableMasonry={false}
                    height={200}
                    newHeight={200}
                    newWidth={200}
                    newWidthInPercent={20}
                    onClick={[Function]}
                    originalHeight={500}
                    originalWidth={500}
                    placeholderColor="#f0f0f0"
                    placeholderHeight={100}
                    src="/image/name/1"
                    visible={true}
                    width={200}
                  >
                    <Styled(Component)
                      alt=""
                      onClick={[Function]}
                      src="/image/name/1"
                      visible={true}
                    >
                      <StyledComponent
                        alt=""
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bwzfXH",
                              "isStatic": false,
                              "lastClassName": "eYmfNB",
                              "rules": Array [
                                "
  position: absolute;
  display: ",
                                [Function],
                                ";
  width: 100%;
  cursor: pointer;
",
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bwzfXH",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        src="/image/name/1"
                        visible={true}
                      >
                        <Component
                          alt=""
                          className="sc-bwzfXH eYmfNB"
                          onClick={[Function]}
                          src="/image/name/1"
                          visible={true}
                        >
                          <img
                            alt=""
                            className="sc-bwzfXH eYmfNB"
                            onClick={[Function]}
                            src="/image/name/1"
                          />
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                  </Image>
                  <div
                    style={
                      Object {
                        "backgroundColor": "#f0f0f0",
                        "paddingTop": "100%",
                      }
                    }
                  />
                </div>
              </ViewMonitor>
            </div>
            <div
              className=""
              key="column-/image/name/1-0-2"
              style={
                Object {
                  "display": "inline-block",
                  "margin": "0 0.5% 0.5% 0",
                  "maxWidth": null,
                  "position": "relative",
                  "verticalAlign": "top",
                  "width": "20%",
                }
              }
            >
              <ViewMonitor>
                <div>
                  <Image
                    alt=""
                    aspectRatio={1}
                    enableMasonry={false}
                    height={200}
                    newHeight={200}
                    newWidth={200}
                    newWidthInPercent={20}
                    onClick={[Function]}
                    originalHeight={500}
                    originalWidth={500}
                    placeholderColor="#f0f0f0"
                    placeholderHeight={100}
                    src="/image/name/1"
                    visible={true}
                    width={200}
                  >
                    <Styled(Component)
                      alt=""
                      onClick={[Function]}
                      src="/image/name/1"
                      visible={true}
                    >
                      <StyledComponent
                        alt=""
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bwzfXH",
                              "isStatic": false,
                              "lastClassName": "eYmfNB",
                              "rules": Array [
                                "
  position: absolute;
  display: ",
                                [Function],
                                ";
  width: 100%;
  cursor: pointer;
",
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bwzfXH",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        src="/image/name/1"
                        visible={true}
                      >
                        <Component
                          alt=""
                          className="sc-bwzfXH eYmfNB"
                          onClick={[Function]}
                          src="/image/name/1"
                          visible={true}
                        >
                          <img
                            alt=""
                            className="sc-bwzfXH eYmfNB"
                            onClick={[Function]}
                            src="/image/name/1"
                          />
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                  </Image>
                  <div
                    style={
                      Object {
                        "backgroundColor": "#f0f0f0",
                        "paddingTop": "100%",
                      }
                    }
                  />
                </div>
              </ViewMonitor>
            </div>
            <div
              className=""
              key="column-/image/name/1-0-3"
              style={
                Object {
                  "display": "inline-block",
                  "margin": "0 0 0.5% 0",
                  "maxWidth": null,
                  "position": "relative",
                  "verticalAlign": "top",
                  "width": "20%",
                }
              }
            >
              <ViewMonitor>
                <div>
                  <Image
                    alt=""
                    aspectRatio={1}
                    enableMasonry={false}
                    height={200}
                    newHeight={200}
                    newWidth={200}
                    newWidthInPercent={20}
                    onClick={[Function]}
                    originalHeight={500}
                    originalWidth={500}
                    placeholderColor="#f0f0f0"
                    placeholderHeight={100}
                    src="/image/name/1"
                    visible={true}
                    width={200}
                  >
                    <Styled(Component)
                      alt=""
                      onClick={[Function]}
                      src="/image/name/1"
                      visible={true}
                    >
                      <StyledComponent
                        alt=""
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bwzfXH",
                              "isStatic": false,
                              "lastClassName": "eYmfNB",
                              "rules": Array [
                                "
  position: absolute;
  display: ",
                                [Function],
                                ";
  width: 100%;
  cursor: pointer;
",
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bwzfXH",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        src="/image/name/1"
                        visible={true}
                      >
                        <Component
                          alt=""
                          className="sc-bwzfXH eYmfNB"
                          onClick={[Function]}
                          src="/image/name/1"
                          visible={true}
                        >
                          <img
                            alt=""
                            className="sc-bwzfXH eYmfNB"
                            onClick={[Function]}
                            src="/image/name/1"
                          />
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                  </Image>
                  <div
                    style={
                      Object {
                        "backgroundColor": "#f0f0f0",
                        "paddingTop": "100%",
                      }
                    }
                  />
                </div>
              </ViewMonitor>
            </div>
          </div>
          <div
            key="detail-0"
          />
        </div>
      </ForwardRef>
    </StyledComponent>
  </Styled(Component)>
</Justified>
`;
